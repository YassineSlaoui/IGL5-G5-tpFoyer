apiVersion: apps/v1
kind: Deployment
metadata:
  name: tpfoyer-springboot-deployment
spec:
  selector:
    matchLabels:
      app: tpfoyer-springboot
  replicas: 2
  template:
    metadata:
      labels:
        app: tpfoyer-springboot
    spec:
      nodeSelector:
        eks.amazonaws.com/nodegroup: "${cluster_name}-app-ng"
      containers:
        - name: tpfoyer-springboot-k8s
          image: dfcn0/tpfoyer-springboot:latest
          ports:
            - containerPort: 8082
          env:
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: db-config
                  key: host
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: db-config
                  key: dbName
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mysql-secrets
                  key: username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secrets
                  key: password

---
apiVersion: v1
kind: Service
metadata:
  name: tpfoyer-springboot-svc
spec:
  selector:
    app: tpfoyer-springboot
  ports:
    - protocol: "TCP"
      port: 8082
      targetPort: 8082
  type: LoadBalancer
